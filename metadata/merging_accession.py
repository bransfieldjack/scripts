import numpy as np
import pandas as pd
import functools 
import csv
import pymongo
from pymongo import MongoClient
import psycopg2
import json


"""
Copying the accession field from the legacy dataset_metadata.psql 
table and appending it to the mongodb datasets collection.
"""


def main():

    MONGO_URI='mongodb://localhost:27017'
   
    myclient = pymongo.MongoClient(MONGO_URI) 
    database = myclient["dataportal_prod_meta"]
    collection = database["datasets"]
    mongo_cursor = collection.find()

    connection = psycopg2.connect(user = "portaladmin",
                                  host = "localhost",
                                  port = "5432",
                                  database = "dataportal")
    cursor = connection.cursor()

    dataset_ids = cursor.execute("select ds_id, ds_value from dataset_metadata where ds_name='GEO Accession';")
    dataset_ids_row = cursor.fetchall() 

    # print(dataset_ids_row)
    keys = ("dataset_id", "accession")
    list_of_accession_dict = [dict(zip(keys, values)) for values in dataset_ids_row]

    accession_datasets = []
    for d in list_of_accession_dict:
        accession_datasets.append(d["dataset_id"])

    # find = next((item for item in list_of_accession_dict if item['dataset_id'] == 6440), None)
    # print(find)

    # print(accession_datasets)

    for item in mongo_cursor:

        hard_coded = [7194, 7131, 6992, 6066, 6065, 6085, 6889, 6795, 6068, 6193, 5019, 6134, 6070, 7077, 6124, 6168, 6071, 6154, 6086, 6135, 5001, 6317, 6155, 6160, 6995, 6110, 6106, 6136, 6083, 6309, 6716, 6156, 6274, 6125, 6140, 6181, 6117, 6780, 6231, 6089, 6079, 6195, 6291, 6439, 6316, 6172, 6007, 6303, 6275, 6114, 6467, 6395, 6320, 6101, 6009, 6057, 6346, 6440, 6315, 6416, 6108, 5008, 6297, 6271, 6120, 6000, 6169, 6119, 7053, 7017, 6074, 7139, 6794, 6201, 6331, 6222, 7108, 6518, 6382, 6500, 6228, 6322, 6368, 6126, 6482, 6483, 6745, 6644, 6248, 6151, 6149, 6264, 7244, 6498, 6242, 6307, 6702, 6088, 6402, 6509, 6063, 6624, 6306, 6123, 6561, 6081, 5043, 6173, 6758, 6285, 6308, 6544, 6300, 5024, 6658, 6593, 6652, 6592, 6756, 6143, 6008, 6731, 6344, 6723, 7088, 6643, 6761, 5023, 6609, 6637, 6656, 6865, 6321, 6194, 6253, 6390, 7045, 6167, 6360, 7201, 6823, 7114, 6266, 7236, 6405, 5038, 6455, 6659, 6354, 6853, 6835, 6435, 6436, 6432, 6098, 6583, 6582, 6310, 6588, 5040, 6185, 6055, 6778, 6087, 6749, 6864, 6584, 7036, 6233, 6848, 6776, 6284, 7084, 7117, 6144, 6887, 6785, 6832, 6880, 6559, 6729, 6033, 6207, 6952, 6514, 6485, 6187, 7067, 6276, 6701, 6198, 6576, 6633, 6830, 5021, 6597, 6334, 6541, 6635, 6413, 6399, 6158, 7009, 6325, 6703, 6602, 6627, 6700, 6705, 6711, 6713, 6712, 6754, 7072, 6974, 7065, 6714, 6828, 6826, 6763, 6829, 6355, 6179, 6898, 6825, 6827, 6203, 6688, 7023, 7026, 6296, 7027, 6385, 6170, 6109, 7010, 6199, 5016, 6459, 6468, 6600, 6545, 6473, 6528, 6152, 6062, 6345, 6556, 6184, 6555, 6480, 7229, 6270, 7029, 7096, 6611, 7115, 5032, 7224, 5036, 6679, 6216, 6429, 6182, 5042, 6052, 6444, 6051, 6629, 6343, 6056, 6450, 5018, 7113, 7064, 6293, 6004, 6247, 6206, 6747, 6566, 6183, 6254, 6786, 6005, 6927, 5022, 6414, 6715, 7059, 6470, 5025, 6161, 5012, 6746, 6145, 6710, 6281, 7206, 6614, 6373, 6332, 7120, 6868, 5029, 5027, 5031, 6049, 6035, 6965, 6006, 6393, 6929, 6448, 6449, 6364, 6527, 6053, 6454, 6606, 6223, 6502, 6047, 6806, 6288, 6268, 6479, 6278, 6362, 6562, 6895, 6452, 6619, 5015, 6558, 6557, 6042, 6796, 6048, 6687, 6446, 6505, 6696, 6265, 5006, 6453, 6292, 6347, 6854, 7248, 6162, 6820, 6273, 7227, 6289, 6631, 5039, 6831, 6111, 7169, 7102, 7167, 6329, 7267, 7250, 7260, 7263, 7142, 7161, 7324, 7170, 7290, 6072, 7168, 6001, 7205, 7291, 6589, 6147, 7269, 6767, 7258, 7160, 6499, 6359, 6646, 6901, 7266, 7204, 7173, 7166, 7148, 7145, 6948, 6988, 6750, 6290, 6269, 6280, 6655, 6349, 7298, 7297, 6769, 7129, 5003, 6190, 6146, 6461, 6080, 6943, 6951, 6338, 7243, 5033, 7309, 7271, 7091, 6166, 5028, 7211, 2000, 6542, 6792, 6850, 6869, 6328, 7099, 5005, 7060, 7128, 5002, 7238, 7087, 7241, 7073, 7264, 7182, 7011, 7253, 6639, 7228, 7188, 7061, 7135, 7172, 7124, 7159, 7284, 6730, 7171, 6936, 6186, 7329, 7328, 7330, 6534, 6153, 6157, 7275, 7132, 6932, 6845, 6403, 7331, 6733, 6491, 6489, 7242, 6371, 7320, 7130, 6353, 6490, 5035, 6783, 6336, 6058, 6447, 6208, 7198, 6834, 6954, 7240, 7195, 6798, 6837, 7200, 6130, 6127, 6370, 7344, 7336, 7325, 7339, 7343, 6523, 6608, 6764, 6884, 6855, 6496, 7046, 6896, 7313, 7308, 7254, 6991, 7361, 7326, 6092, 7366, 6043, 7127, 7311, 7357, 6625, 7337, 7237, 7371, 7239, 7350, 7274, 6580, 7362, 7192, 6286, 7351, 6530, 6412, 7380, 6735, 7032, 7376, 7321, 6501, 6572, 6313, 7283, 7268, 6886, 7277, 6358, 6601, 5041, 6213, 6366, 6237, 6272, 6003, 6238, 6252, 6326, 6741, 6638, 7079, 6463, 6363, 7062, 7002, 6277, 6357, 6612, 6324, 6245, 6064, 7323, 7319, 7358, 6339, 6774, 6787, 6610, 7288, 6037, 6661, 7379, 7003, 7193, 7021, 7393, 7272, 7394, 5030, 6021, 3000, 5013, 4000, 7392, 6852, 6950, 7378, 6724, 6982, 6993, 6860, 7012, 6218, 6613, 6229, 6599, 6318, 6779, 6396, 7401, 5020, 6466, 6267, 6445, 6620, 6622, 6748, 6938, 6981, 7004, 7028, 7312, 7345, 7276, 7322, 7249, 7179, 7217, 7218, 7209]
        object_id = item['_id']
        dataset_id = item['dataset_id']

        if int(dataset_id) in hard_coded:

            find = next((item for item in list_of_accession_dict if item['dataset_id'] == int(dataset_id)), None)
            myquery = { "_id": object_id }
            newvalues = { "$set": find } 
            collection.update_one(myquery, newvalues)

        if int(dataset_id) not in hard_coded:

            myquery = { "_id": object_id }
            newvalues = {'$set': {'dataset_id': int(dataset_id), 'accession': 'NULL'}}
            collection.update_one(myquery, newvalues)
            
    print("Operation complete.")

if __name__ == "__main__":
    main()