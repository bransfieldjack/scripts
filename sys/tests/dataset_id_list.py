"""
This script will return a list of all the dataset_ids prepending the expression files, filenames in '' on the api server. 
"""

import os, tarfile, pandas
import smtplib
import glob
import re

def main():

    """
    Distinct dataset id's are present in the mongodb docker container running inside the api server which is
    not accessible from the api bash cli. 
    Hence the need to hardcode the distinct id's returned from a db query. 
    No issue with security - the ids are meaningless without metadata anyways, its an awkward script to read however. 
    """

    distinct_datasets = [ 1000, 2000, 3000, 4000, 5001, 5002, 5003, 5004, 
    5005, 5006, 5008, 5012, 5013, 5015, 5016, 5018, 5019, 5020, 5021, 5022, 
    5023, 5024, 5025, 5027, 5028, 5029, 5030, 5031, 5032, 5033, 5035, 5036, 
    5038, 5039, 5040, 5041, 5042, 5043, 6000, 6001, 6003, 6004, 6005, 6006, 
    6007, 6008, 6009, 6021, 6033, 6035, 6037, 6042, 6043, 6047, 6048, 6049, 
    6051, 6052, 6053, 6055, 6056, 6057, 6058, 6062, 6063, 6064, 6065, 6066, 
    6068, 6070, 6071, 6072, 6074, 6075, 6076, 6079, 6080, 6081, 6083, 6085, 
    6086, 6087, 6088, 6089, 6092, 6098, 6101, 6106, 6108, 6109, 6110, 6111, 
    6114, 6117, 6119, 6120, 6123, 6124, 6125, 6126, 6127, 6128, 6130, 6131, 
    6134, 6135, 6136, 6140, 6143, 6144, 6145, 6146, 6147, 6149, 6150, 6151, 
    6152, 6153, 6154, 6155, 6156, 6157, 6158, 6160, 6161, 6162, 6166, 6167, 
    6168, 6169, 6170, 6172, 6173, 6179, 6181, 6182, 6183, 6184, 6185, 6186, 
    6187, 6190, 6193, 6194, 6195, 6197, 6198, 6199, 6201, 6203, 6206, 6207, 
    6208, 6213, 6216, 6218, 6222, 6223, 6228, 6229, 6231, 6233, 6237, 6238, 
    6242, 6245, 6247, 6248, 6252, 6253, 6254, 6264, 6265, 6266, 6267, 6268, 
    6269, 6270, 6271, 6272, 6273, 6274, 6275, 6276, 6277, 6278, 6280, 6281, 
    6284, 6285, 6286, 6288, 6289, 6290, 6291, 6292, 6293, 6296, 6297, 6300, 
    6303, 6306, 6307, 6308, 6309, 6310, 6313, 6315, 6316, 6317, 6318, 6320, 
    6321, 6322, 6324, 6325, 6326, 6328, 6329, 6331, 6332, 6334, 6336, 6338, 
    6339, 6343, 6344, 6345, 6346, 6347, 6349, 6353, 6354, 6355, 6357, 6358, 
    6359, 6360, 6362, 6363, 6364, 6366, 6368, 6370, 6371, 6373, 6382, 6385, 
    6390, 6393, 6395, 6396, 6399, 6402, 6403, 6405, 6412, 6413, 6414, 6416, 
    6429, 6432, 6435, 6436, 6439, 6440, 6444, 6445, 6446, 6447, 6448, 6449, 
    6450, 6452, 6453, 6454, 6455, 6459, 6461, 6463, 6466, 6467, 6468, 6470, 
    6473, 6479, 6480, 6482, 6483, 6485, 6489, 6490, 6491, 6496, 6498, 6499, 
    6500, 6501, 6502, 6505, 6509, 6514, 6518, 6523, 6527, 6528, 6530, 6534, 
    6541, 6542, 6544, 6545, 6555, 6556, 6557, 6558, 6559, 6561, 6562, 6566, 
    6572, 6576, 6580, 6582, 6583, 6584, 6588, 6589, 6592, 6593, 6597, 6599, 
    6600, 6601, 6602, 6606, 6608, 6609, 6610, 6611, 6612, 6613, 6614, 6619, 
    6620, 6622, 6624, 6625, 6627, 6629, 6631, 6633, 6635, 6637, 6638, 6639, 
    6643, 6644, 6646, 6652, 6655, 6656, 6658, 6659, 6661, 6679, 6687, 6688, 
    6696, 6700, 6701, 6702, 6703, 6705, 6710, 6711, 6712, 6713, 6714, 6715, 
    6716, 6723, 6724, 6729, 6730, 6731, 6733, 6735, 6741, 6745, 6746, 6747, 
    6748, 6749, 6750, 6754, 6756, 6758, 6761, 6763, 6764, 6767, 6769, 6774, 
    6776, 6778, 6779, 6780, 6783, 6785, 6786, 6787, 6792, 6794, 6795, 6796, 
    6798, 6806, 6820, 6823, 6825, 6826, 6827, 6828, 6829, 6830, 6831, 6832, 
    6834, 6835, 6837, 6845, 6848, 6850, 6852, 6853, 6854, 6855, 6860, 6864, 
    6865, 6868, 6869, 6880, 6884, 6886, 6887, 6889, 6895, 6896, 6898, 6901, 
    6927, 6929, 6932, 6936, 6938, 6943, 6948, 6950, 6951, 6952, 6954, 6965, 
    6974, 6981, 6982, 6988, 6991, 6992, 6993, 6995, 7002, 7003, 7004, 7009, 
    7010, 7011, 7012, 7017, 7021, 7023, 7026, 7027, 7028, 7029, 7032, 7036, 
    7045, 7046, 7053, 7059, 7060, 7061, 7062, 7064, 7065, 7067, 7072, 7073, 
    7077, 7079, 7084, 7087, 7088, 7091, 7096, 7099, 7102, 7108, 7113, 7114, 
    7115, 7117, 7120, 7124, 7127, 7128, 7129, 7130, 7131, 7132, 7135, 7139, 
    7142, 7145, 7147, 7148, 7159, 7160, 7161, 7166, 7167, 7168, 7169, 7170, 
    7171, 7172, 7173, 7179, 7182, 7188, 7192, 7193, 7194, 7195, 7198, 7200, 
    7201, 7204, 7205, 7206, 7209, 7211, 7217, 7218, 7224, 7227, 7228, 7229, 
    7236, 7237, 7238, 7239, 7240, 7241, 7242, 7243, 7244, 7248, 7249, 7250, 
    7253, 7254, 7258, 7260, 7263, 7264, 7266, 7267, 7268, 7269, 7271, 7272, 
    7274, 7275, 7276, 7277, 7283, 7284, 7288, 7290, 7291, 7297, 7298, 7308, 
    7309, 7311, 7312, 7313, 7319, 7320, 7321, 7322, 7323, 7324, 7325, 7326, 
    7328, 7329, 7330, 7331, 7336, 7337, 7339, 7343, 7344, 7345, 7350, 7351, 
    7357, 7358, 7361, 7362, 7366, 7371, 7376, 7378, 7379, 7380, 7387, 7392, 
    7393, 7394, 7401, 7415 ]

    expression_files = ['6049', '6336', '6500', '6060', '6105', '6219', '6835', 
    '6490', '6320', '6705', '6416', '7064', '6047', '6644', '7361', '6403', 
    '6370', '6576', '6943', '6691', '6582', '6787', '6343', '6558', '6052', 
    '7099', '7345', '6750', '6145', '6606', '6496', '5035', '6413', '6315', 
    '6064', '6538', '6519', '6865', '7319', '5010', '6954', '6322', '6468', 
    '6525', '7350', '6429', '6518', '7159', '6254', '6008', '6584', '6412', 
    '6303', '6275', '6728', '6353', '7032', '6501', '6485', '6363', '6547', 
    '6460', '5003', '6748', '6054', '6447', '6852', '6650', '6422', '6714', 
    '6823', '6612', '6310', '6733', '6830', '6223', '6472', '6349', '6165', 
    '6291', '6427', '6396', '7046', '6735', '6415', '6505', '6551', '6608', 
    '6231', '6390', '6233', '6559', '6689', '7357', '6204', '6510', '6048', 
    '6880', '6696', '7249', '6173', '6715', '6568', '7130', '6098', '6780', 
    '6869', '6855', '6639', '6454', '6043', '6203', '6514', '7124', '6354', 
    '6832', '6647', '6338', '6534', '6542', '7135', '6442', '6951', '6681', 
    '6710', '6352', '6001', '7059', '6192', '7156', '6312', '6159', '6712', 
    '6744', '7264', '6366', '6489', '6242', '6595', '6373', '7010', '6201', 
    '6539', '6840', '6181', '7028', '7053', '6556', '6965', '5001', '6637', 
    '6614', '6646', '7268', '6616', '6895', '7079', '6330', '6854', '6778', 
    '7096', '6461', '6502', '6709', '6316', '6215', '6247', '6620', '6688', 
    '6271', '6562', '6277', '7088', '6834', '6722', '6602', '6661', '7339', 
    '6825', '6774', '6361', '6713', '6758', '6738', '6795', '7228', '6826', 
    '6455', '6779', '6360', '6619', '7242', '6645', '6625', '6806', '6482', 
    '6088', '6074', '7128', '6794', '7120', '7283', '7097', '6198', '7285', 
    '6121', '6399', '6711', '6238', '7045', '6199', '7129', '6425', '6344', 
    '6786', '6147', '6555', '6339', '6580', '6901', '6297', '6743', '6097', 
    '6424', '6359', '6334', '6275', '6401', '6466', '7200', '7346', '6309', 
    '6759', '6259', '7255', '6031', '7239', '6157', '6479', '6932', '6800', 
    '6974', '6985', '6402', '6635', '6243', '6270', '7113', '6213', '6273', 
    '6535', '6217', '6056', '7062', '6483', '6437', '6991', '6241', '6109', 
    '6009', '7343', '6640', '7114', '7127', '6611', '6218', '6276', '6593', 
    '6035', '6588', '6331', '7393', '6610', '6610', '20170320', '7224', 
    '7194', '6652', '7091', '7060', '6305', '6473', '6190', '6898', 
    '6314', '6651', '6216', '6362', '6235', '6058', '7172', '6656', 
    '7139', '7322', '6440', '7029', '6820', '6195', '6853', '6280', 
    '6037', '6055', '6716', '6211', '6572', '6333', '6143', '6220', 
    '6341', '6703', '6561', '6792', '6365', '6304', '6441', '6065', 
    '6268', '6209', '6589', '6372', '6864', '6212', '6318', '6246', 
    '6355', '6856', '7132', '6601', '6633', '6537', '6439', '6252', 
    '6548', '6286', '7171', '6299', '7292', '7254', '6548', '6586', 
    '6841', '6421', '7274', '7193', '6267', '6527', '6636', '6228', 
    '6469', '6592', '6707', '6253', '6624', '6444', '6126', '6405', 
    '7131', '7023', '6364', '6798', '7102', '7157', '6549', '6697', 
    '6480', '6308', '6896', '7415', '7206', '7003', '7067', '6419', 
    '7070', '6761', '6042', '6313', '6936', '6128', '7229', '6257', 
    '6626', '6828', '6600', '6827', '6293', '6436', '6605', '6452', 
    '6730', '6993', '6767', '6208', '6269', '6700', '6667', '6194', 
    '6631', '6414', '6509', '6426', '7205', '5043', '6701', '6317', 
    '6418', '6833', '6428', '6281', '6467', '6803', '6436', '6161', 
    '6042', '6207', '6108', '6702', '6627', '6183', '6294', '6300', 
    '7195', '6764', '6566', '7312', '6301', '6741', '7376', '6393', 
    '6630', '6449', '7321', '6550', '6769', '6528', '7394', '6453', 
    '7308', '6888', '7257', '6053', '7267', '6420', '6756', '6488', 
    '7188', '6464', '6432', '6325', '6720', '6643', '6988', '6272', 
    '6446', '7378', '6622', '6831', '6033', '6927', '6329', '6747', 
    '6237', '6382', '6554', '6726', '6146', '6964', '7248', '6785', 
    '6144', '6384', '7084', '6962', '6240', '6796', '6275', '6266', 
    '7061', '6658', '6563', '6423', '6292', '6347', '6597', '6119', 
    '6289', '7036', '6992', '6385', '7002', '6374', '6214', '7260', 
    '6581', '6153', '6493', '6435', '6191', '7142', '6648', '7190', 
    '6321', '7379', '6387', '6690', '6745', '6508', '6264', '6290', 
    '6356', '6524', '6938', '6285', '6057', '6520', '6193', '6599', 
    '6234', '6629', '6724', '7313', '7240', '7284', '6731', '6848', 
    '6564', '6324', '6557', '6400', '7286', '7117', '6463', '7320', 
    '6256', '6668', '6587', '6726', '7027', '7017', '6738', '7275', 
    '6638', '6504', '6357', '5037', '6278', '6659', '6886', '6868', 
    '6326', '6248', '6265', '6222', '6284', '7377', '6448', '6296', 
    '6511', '6332', '7011', '7069', '7145', '6262', '6450', '6679', 
    '7026', '6687', '6749', '6229', '6723', '6541', '6545', '6499', 
    '6288', '6459', '6498', '6783', '6470', '6245', '7351', '7241', 
    '6345', '6346', '6491', '6746', '7327', '6553', '6397', '6358', 
    '6371', '6307', '6206', '6328', '6884', '6523', '6544', '7179', 
    '6850', '6829', '7077', '7192', '6395', '6763', '7253', '6168', 
    '6445', '6185', '6306', '6692', '6739', '6494', '6929', '7072', 
    '7021', '6583', '6152', '7110']

    """
    Computation:
    """

    item_list = []  # Get a list of filenames/dataset id's
    for item in expression_files:
        item_list.append(int(item))

    # for item in glob.glob(r'/expression-files-volume/*.raw.tsv'):
    #     item_list.append(re.findall('\d+', item ))

    # flat_list = []  # Flatten a list of returned lists
    # for sublist in item_list:
    #     for item in sublist:
    #         flat_list.append(item)

    list_difference = []    # Check the difference between the two
    for item in item_list:
        if item not in distinct_datasets:
            list_difference.append(item)

    print("diff:")
    print(list_difference)

    # Diff count/: 159

    """
    [6060, 6105, 6219, 6691, 6538, 6519, 5010, 6525, 6728, 6547, 6460, 6054, 6650, 
    6422, 6472, 6165, 6427, 6415, 6551, 6689, 6204, 6510, 6568, 6647, 6442, 6681, 
    6352, 6192, 7156, 6312, 6159, 6744, 6595, 6539, 6840, 6616, 6330, 6709, 6215, 
    6722, 6361, 6738, 6645, 7097, 7285, 6121, 6425, 6743, 6097, 6424, 6401, 7346, 
    6759, 6259, 7255, 6031, 6800, 6985, 6243, 6535, 6217, 6437, 6241, 6640, 20170320, 
    6305, 6314, 6651, 6235, 6211, 6333, 6220, 6341, 6365, 6304, 6441, 6209, 6372, 6212, 
    6246, 6856, 6537, 6548, 6299, 7292, 6548, 6586, 6841, 6421, 6636, 6469, 6707, 7157, 
    6549, 6697, 6419, 7070, 6257, 6626, 6605, 6667, 6426, 6418, 6833, 6428, 6803, 6294, 
    6301, 6630, 6550, 6888, 7257, 6420, 6488, 6464, 6720, 6554, 6726, 6964, 6384, 6962, 
    6240, 6563, 6423, 6374, 6214, 6581, 6493, 6191, 6648, 7190, 6387, 6690, 6508, 6356, 
    6524, 6520, 6234, 6564, 6400, 7286, 6256, 6668, 6587, 6726, 6738, 6504, 5037, 7377, 
    6511, 7069, 6262, 7327, 6553, 6397, 6692, 6739, 6494, 7110]
    """
    
if __name__ == "__main__":
    main()

